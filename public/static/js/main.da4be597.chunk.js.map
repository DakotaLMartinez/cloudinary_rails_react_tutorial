{"version":3,"sources":["AuthenticatedApp.js","components/Login.js","components/Signup.js","UnauthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["AuthenticatedApp","currentUser","setCurrentUser","history","useHistory","useState","posts","setPosts","useEffect","fetch","then","res","json","username","onClick","method","credentials","ok","push","map","post","title","content","id","Login","setUsername","password","setPassword","to","onSubmit","event","preventDefault","headers","body","JSON","stringify","user","errors","console","error","htmlFor","type","name","value","onChange","e","target","Signup","passwordConfirmation","setPasswordConfirmation","password_confirmation","UnauthenticatedApp","exact","path","App","authChecked","setAuthChecked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da4be597.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction AuthenticatedApp({ currentUser, setCurrentUser }) {\n  const history = useHistory()\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    fetch('/api/posts')\n      .then(res => res.json())\n      .then(posts => setPosts(posts))\n  }, [])\n  \n  const handleLogout = () => {\n    fetch('/api/logout', {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          setCurrentUser(null)\n          history.push('/')\n        }\n      })\n  }\n\n  return (\n    <div>\n      <p>Logged in as {currentUser.username} <button onClick={handleLogout}>Logout</button></p>\n      {posts.map(post => (\n        <div key={post.id}>\n          <h2>{post.title}</h2>\n          <p>{post.content}</p>\n        </div>\n      ))\n      }\n    </div>\n  );\n}\n\nexport default AuthenticatedApp;","import React, { useState } from 'react'\nimport { Redirect, useHistory, Link } from 'react-router-dom'\n\nfunction Login({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({username, password})\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n            history.push('/wherever')\n          })\n        } else {\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div>\n      <Redirect to=\"/\" />\n      <form onSubmit={handleSubmit}>\n        <h1>Log In</h1>\n        <p>\n          <label htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </p>\n        <p>\n          <label\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </p>\n        <p><button type=\"submit\">Log In</button></p>\n        <p>-- or --</p>\n        <p><Link to=\"/signup\">Sign Up</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Login","// client/src/components/Signup.js\nimport React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n\nfunction Signup({ setCurrentUser }) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    fetch('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then(user => {\n            setCurrentUser(user)\n          })\n        } else {\n          res.json().then(errors => {\n            console.error(errors)\n          })\n        }\n      })\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Sign Up</h1>\n        <p>\n          <label\n            htmlFor=\"username\"\n          >\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </p>\n        <p>\n          <label\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </p>\n        <p>\n          <label \n            htmlFor=\"password_confirmation\"\n          >\n            Password Confirmation\n          </label>\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            value={passwordConfirmation}\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\n          />\n        </p>\n        <p><button type=\"submit\">Sign Up</button></p>\n        <p>-- or --</p>\n        <p><Link to=\"/login\">Log In</Link></p>\n      </form>\n    </div>\n  )\n}\n\nexport default Signup","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\n\nfunction UnauthenticatedApp({ setCurrentUser }) {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login setCurrentUser={setCurrentUser} />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup setCurrentUser={setCurrentUser}/>\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  )\n}\n\nexport default UnauthenticatedApp","import React, { useState, useEffect } from 'react'\nimport AuthenticatedApp from './AuthenticatedApp'\nimport UnauthenticatedApp from './UnauthenticatedApp'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [authChecked, setAuthChecked] = useState(false)\n\n  useEffect(() => {\n    fetch('/api/me', {\n      credentials: 'include'\n    })\n      .then(res => {\n        if (res.ok) {\n          res.json().then((user) => {\n            setCurrentUser(user)\n            setAuthChecked(true)\n          })\n        } else {\n          setAuthChecked(true)\n        }\n      })\n  }, [])\n\n  if(!authChecked) { return <div></div>}\n  return (\n    <Router>\n      {currentUser ? (\n          <AuthenticatedApp\n            setCurrentUser={setCurrentUser}\n            currentUser={currentUser}\n          />\n        ) : (\n          <UnauthenticatedApp\n            setCurrentUser={setCurrentUser}\n          />\n        )\n      }\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}